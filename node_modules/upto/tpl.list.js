module.exports = function tplList (ListComponent, QueryComponent) {
	if (QueryComponent) {
		QueryComponent = `import ${QueryComponent} from './${QueryComponent}'`
	} else {
		QueryComponent = ''
	}

	return `import React , { Component } from 'react'
import ReactDom from 'react-dom'
${QueryComponent}

export default class ${ListComponent} extends Component{
	constructor () {
        super();

        this.state = {
            queryData: {
               
            },
            configData: {
                
            },
            listData: {
                datas: [],
                currentPage: 1,
                totalPage : 1,
                position : 'c',
                onChangePage : this.onChangePage.bind( this )
            },
            otherData: {
                
            },
            status: {
                isQuery: false
            }
        };
    }
    setStateSafe(obj) {
        if (this.mounted) {
            this.setState(obj);
        }
    }
    setStateObj(parentKey, key, value) {
        let copy = this.state[parentKey];
        copy[key] = value;
        let newObj = {};
        newObj[parentKey] = copy;
        this.setStateSafe(newObj);
    } 
    fetchListData (pageNum) {
		// 查询状态
        this.setStateObj('status', 'isQuery', true);
        // 查询数据
        let queryData = JSON.parse( JSON.stringify(this.state.queryData) );
        queryData.page = pageNum;
        // url
        let url = "";
        // ajax
        Util.fetch({
            url: url,
            type: 'GET',
            data: queryData
        }).then( (resData) => {
            if (resData && resData.status == 1001) {
                this.setStateObj('listData', 'datas', resData.data.list || []);
                this.setStateObj('listData', 'currentPage', resData.data.page);
                this.setStateObj('listData', 'totalPage', Math.ceil(resData.data.total/resData.data.limit));
            }
        }).always( () => {
            // 查询状态
            this.setStateObj('status', 'isQuery', false);
        });
    }
    onChangePage (pageNum) {
    	ReactDom.findDOMNode(this).scrollIntoView();
    	this.fetchListData(pageNum);
    }
    fetchConfigData () {

    }
    render () {
        return <div>${ListComponent}</div>
    }
}

`
}