var mkdirp = require('mkdirp');
var tplList = require('./tpl.list');
var tplQuery = require('./tpl.query');
var tplView = require('./tpl.view');
var tplForm = require('./tpl.form');
var formatNav = require('./formatNav');
var fs = require('fs');


String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}

var help = function () {
	console.info(`
【参数说明】

$ -a  # 操作: 新增

$ -l  # 页面类型: 列表
$ -f  # 页面类型: 表单

$ directory | fileName 目录或者文件路径（必填）

【使用示例】

# 在 /workspace 目录下增加一个名为 activity 的模块
$ upto -a /workspace/activity

# 在 /workspace/activity 目录下增加一个名为 ActivityAllView.js 的列表页面
$ upto -al /workspace/activity/ActivityAllView.js 

# 在 /workspace/activity 目录下增加一个名为 ActivityAddView.js 的表单页面
$ upto -af /workspace/activity/ActivityAddView.js 
		`);
	
}


module.exports = function upto (processArgv) { 
	try {
		


		var cli = processArgv.slice(2);
		var argv = cli.slice(0, cli.length-1).join('').toLowerCase();
		if (!cli || cli.length < 2) throw '使用姿势不正确!';

		// 模式
		var model = 'dir'; 
		// 传入文件路径
		var path = cli[cli.length - 1];
		var pathArr = path.split('/');
		if (pathArr[0] == '' || pathArr[0] == '.') { pathArr.shift();}
		if (pathArr[pathArr.length - 1] == '') { pathArr.pop();}
		// 格式化文件路径
		var dirString = '';
		if (pathArr[pathArr.length - 1].lastIndexOf('.js') == pathArr[pathArr.length - 1].length - 3) {
			model = 'file';
			dirString = pathArr.slice(0, -1).join('/');
		} else {
			dirString = pathArr.join('/');
		}

		// 传入名称按驼峰切割后数组
		// var nameArr = name.capitalize().match(/[A-Z][a-z]+/g);


		

		// 文件名称前缀
		var filePrefix = model == 'dir' ? pathArr[pathArr.length - 1].capitalize() : pathArr[pathArr.length - 1].capitalize().slice(0, -3); 
		
		var listView,addView,editView,formView;
		var listBlock,addBlock,editBlock,formBlock,queryBlock; 
		var routeName;
		if (model == 'dir') {
			routeName = filePrefix.toLowerCase();

			listView = filePrefix + 'ListView';
			addView = filePrefix + 'AddView';
			editView = filePrefix + 'EditView';
			formView = filePrefix + 'FormView';

			listBlock = filePrefix + 'ListBlock';
			addBlock = filePrefix + 'AddBlock';
			editBlock = filePrefix + 'EditBlock';
			formView = filePrefix + 'FormBlock'; 
			queryBlock = filePrefix + 'QueryBlock'; 
		} else {
			if (filePrefix.lastIndexOf('View') != filePrefix.length - 4) {
				console.log('视图文件请以View.js结尾！')
				return;
			}
			var routeNameArr = filePrefix.slice(0, -4).capitalize().match(/[A-Z][a-z]+/g);
			routeName = routeNameArr[routeNameArr.length - 1].toLowerCase();
			var routePath = pathArr[pathArr.length - 2] ? pathArr[pathArr.length - 2].toLowerCase() + '/' + routeName : pathArr[pathArr.length - 1].toLowerCase();

			listView = filePrefix;
			addView = filePrefix;
			editView = filePrefix;
			formView = filePrefix;

			listBlock = filePrefix.toLowerCase().indexOf('list') > -1 ? filePrefix.slice(0, -4) + 'Block' : filePrefix.slice(0, -4) + 'ListBlock';
			addBlock = filePrefix.toLowerCase().indexOf('add') > -1 ? filePrefix.slice(0, -4) + 'Block' : filePrefix.slice(0, -4) + 'AddBlock';
			editBlock = filePrefix.toLowerCase().indexOf('edit') > -1 ? filePrefix.slice(0, -4) + 'Block' : filePrefix.slice(0, -4) + 'EditBlock';
			formBlock = filePrefix.toLowerCase().indexOf('form') > -1 ? filePrefix.slice(0, -4) + 'Block' : filePrefix.slice(0, -4) + 'FormBlock';
			queryBlock = filePrefix.toLowerCase().indexOf('query') > -1 ? filePrefix.slice(0, -4) + 'Block' : filePrefix.slice(0, -4) + 'QueryBlock';; 
		}
		
		

		// 新增模块
		if (argv.indexOf('a') > -1 && model == 'dir') {
	    	// 判断是否存在
	    	fs.exists(`./src/views/${dirString}`, function (exists) {
  				if (exists) {
  					console.log('项目中已存在相同文件名模块，换个名字试试~');
  					return;
  				}
				// 新建目录 && 文件
				mkdirp(`./src/views/${dirString}`, 0777, function(err){
					if (!err) {
						// 视图文件
						fs.writeFile(`./src/views/${dirString}/${listView}.js` , tplView(listView) , function (err) {
					        if (err) console.log(err);
					        console.info(`add ${listView}.js success!`);
					    });
					    fs.writeFile(`./src/views/${dirString}/${addView}.js` , tplView(addView) , function (err) {
					        if (err) console.log(err);
					        console.info(`add ${addView}.js success!`);
					    });
					    fs.writeFile(`./src/views/${dirString}/${editView}.js` , tplView(editView) , function (err) {
					        if (err) console.log(err);
					        console.info(`add ${editView}.js success!`);
					    });

					    // 公共文件目录
					    mkdirp(`./src/views/${dirString}/modules`, 0777, function(err) {
					    	

					    	fs.writeFile(`./src/views/${dirString}/modules/${listBlock}.js`, tplList( listBlock, queryBlock ) , function (err) {
			                    if (err) console.log(err);
			                });

			                fs.writeFile(`./src/views/${dirString}/modules/${queryBlock}.js`, tplQuery( queryBlock ) , function (err) {
			                    if (err) console.log(err);
			                });

			                fs.writeFile(`./src/views/${dirString}/modules/${addBlock}.js`, tplForm( addBlock ) , function (err) {
			                    if (err) console.log(err);
			                });

			                fs.writeFile(`./src/views/${dirString}/modules/${editBlock}.js`, tplForm( editBlock ) , function (err) {
			                    if (err) console.log(err);
			                });
					    });
					    
					}
				});
				// 路由
			 	// 读取路由文件
				fs.readFile('./src/routes/index.js', 'utf8', function (err, route) {
					if (err) { return console.log(err); }
				  	var routeIndex = route.lastIndexOf('</Route>');
				  	var routeImport = route.substring(0, routeIndex);
				  	var routeTag = route.substring(routeIndex);

				  	// 导入部分字符串拼接
				  	var importListView = `import ${listView} from '../views/${dirString}/${listView}'`;
				  	if (routeImport.indexOf(importListView) == -1) { routeImport = `${importListView}\n${routeImport}`; }
				  	var importAddView = `import ${addView} from '../views/${dirString}/${addView}'`;
				  	if (routeImport.indexOf(importAddView) == -1) { routeImport = `${importAddView}\n${routeImport}`; }
				  	var importEditView = `import ${editView} from '../views/${dirString}/${editView}'`;
				  	if (routeImport.indexOf(importEditView) == -1) { routeImport = `${importEditView}\n${routeImport}`; }
					
					// 标签部分字符串拼接
					var tagListView = `<Route name='${listView}' path='/${routeName}/list' component={${listView}}/>`;
					if (routeImport.indexOf(tagListView) == -1) { routeTag = `            ${tagListView}\n        ${routeTag}`}
					var tagAddView = `<Route name='${addView}' path='/${routeName}/add' component={${addView}}/>`;
					if (routeImport.indexOf(tagAddView) == -1) { routeTag = `            ${tagAddView}\n${routeTag}`}
					var tagEditView = `<Route name='${editView}' path='/${routeName}/:${routeName}Id/edit' component={${editView}}/>`;
					if (routeImport.indexOf(tagEditView) == -1) { routeTag = `    ${tagEditView}\n${routeTag}`}

					var routeFile = `${routeImport}${routeTag}`;
					// 更新路由文件
					fs.writeFile(`./src/routes/index.js` , routeFile , function (err) {
				        if (err) console.log(err);
				        console.info(`update ./src/routes/index.js success!`);
				    });
				});
				// 导航
				// 加入侧边栏导航
				formatNav(model, routeName);
			});
		 	
		// 新增列表页面
		} else if (argv.indexOf('a') > -1 && argv.indexOf('l') > -1 && model == 'file') {
			// 判断是否存在
	    	fs.stat(`./src/views/${dirString}/${listView}.js`, function (exists) {
  				if ( exists === null ) {
  					console.log('项目中已存在相同文件名页面，换个名字试试~');
  					return;
  				}
				// 新建目录 && 文件
				mkdirp(`./src/views/${dirString}`, 0777, function(err){
					if (!err) {
						// 视图文件
						fs.writeFile(`./src/views/${dirString}/${listView}.js` , tplView(listView) , function (err) {
					        if (err) console.log(err);
					        console.info(`add ${listView}.js success!`);
					    });

					    // 公共文件目录
					    mkdirp(`./src/views/${dirString}/modules`, 0777, function(err) {
					    	// 列表block
					    	fs.stat(`./src/views/${dirString}/modules/${listBlock}.js`, function (exists) {
  								if (exists === null) { return; }
  								fs.writeFile(`./src/views/${dirString}/modules/${listBlock}.js`, tplList( listBlock, queryBlock ) , function (err) {
				                    if (err) console.log(err);
				                });
							});
						    
						    // 查询block
					    	fs.stat(`./src/views/${dirString}/modules/${queryBlock}.js`, function (exists) {
  								if (exists === null) { return; }
  								fs.writeFile(`./src/views/${dirString}/modules/${queryBlock}.js`, tplQuery( queryBlock ) , function (err) {
				                    if (err) console.log(err);
				                });
							});
					    });
					}
				});
			
				// 路由
			 	// 读取路由文件
				fs.readFile('./src/routes/index.js', 'utf8', function (err, route) {
					if (err) { return console.log(err); }
				  	var routeIndex = route.lastIndexOf('</Route>');
				  	var routeImport = route.substring(0, routeIndex);
				  	var routeTag = route.substring(routeIndex);

				  	// 导入部分字符串拼接
				  	var importListView = `import ${listView} from '../views/${dirString}/${listView}'`;
				  	if (routeImport.indexOf(importListView) == -1) { routeImport = `${importListView}\n${routeImport}`; }
					
					// 标签部分字符串拼接
					var tagListView = `<Route name='${listView}' path='/${routePath}' component={${listView}}/>`;
					if (routeImport.indexOf(tagListView) == -1) { routeTag = `    ${tagListView}\n        ${routeTag}`}

					var routeFile = `${routeImport}${routeTag}`;
					// 更新路由文件
					fs.writeFile(`./src/routes/index.js` , routeFile , function (err) {
				        if (err) console.log(err);
				        console.info(`update ./src/routes/index.js success!`);
				    });

				});

				// 导航
				// 加入侧边栏导航
				formatNav(model, routeName, routePath, 'list', pathArr);
			});

		// 新增表单页面
		} else if (argv.indexOf('a') > -1 && argv.indexOf('f') > -1 && model == 'file') {
			var pageView, pageBlock, type;
			if ( filePrefix.indexOf('Add') > -1) {
				pageView = addView;
				pageBlock = addBlock;
				type = 'add';
			} else if (filePrefix.indexOf('Edit') > -1) {
				pageView = editView;
				pageBlock = editBlock;
				type = 'edit';
			} else {
				pageView = formView;;
				pageBlock = formBlock;
				type = 'form';
			}

			// 判断是否存在
	    	fs.stat(`./src/views/${dirString}/${pageView}.js`, function (exists) {
  				if (exists === null) {
  					console.log('项目中已存在相同文件名页面，换个名字试试~');
  					return;
  				}
				// 新建目录 && 文件
				mkdirp(`./src/views/${dirString}`, 0777, function(err){
					if (!err) {
						// 视图文件
						fs.writeFile(`./src/views/${dirString}/${pageView}.js` , tplView(pageView) , function (err) {
					        if (err) console.log(err);
					        console.info(`add ${pageView}.js success!`);
					    });

					    // 公共文件目录
					    mkdirp(`./src/views/${dirString}/modules`, 0777, function(err) {
					    	
					    	// 表单block
					    	fs.stat(`./src/views/${dirString}/modules/${pageBlock}.js`, function (exists) {
  								if (exists === null) { return; }
  								fs.writeFile(`./src/views/${dirString}/modules/${pageBlock}.js`, tplForm( pageBlock ) , function (err) {
				                    if (err) console.log(err);
				                });
							});
					    });
					}
				});

				// 路由
			 	// 读取路由文件
				fs.readFile('./src/routes/index.js', 'utf8', function (err, route) {
					if (err) { return console.log(err); }
				  	var routeIndex = route.lastIndexOf('</Route>');
				  	var routeImport = route.substring(0, routeIndex);
				  	var routeTag = route.substring(routeIndex);

				  	// 导入部分字符串拼接
				  	var importListView = `import ${pageView} from '../views/${dirString}/${pageView}'`;
				  	if (routeImport.indexOf(importListView) == -1) { routeImport = `${importListView}\n${routeImport}`; }
				  	
					
					// 标签部分字符串拼接
					var tagListView = `<Route name='${pageView}' path='/${routePath}' component={${pageView}}/>`;
					if (routeImport.indexOf(tagListView) == -1) { routeTag = `    ${tagListView}\n        ${routeTag}`}
					

					var routeFile = `${routeImport}${routeTag}`;
					// 更新路由文件
					fs.writeFile(`./src/routes/index.js` , routeFile , function (err) {
				        if (err) console.log(err);
				        console.info(`update ./src/routes/index.js success!`);
				    });
				});

				// 导航
				// 加入侧边栏导航
				formatNav(model, routeName, routePath, type, pathArr);
			});

			 	
		} else {
			console.log('使用姿势不正确！');
			help();
		}
		
	} catch (err) {
		console.log(err);
		help();
	}
};
		